// Copyright (c) Redforce04. All rights reserved.
// </copyright>
// -----------------------------------------
//    Solution:         PiZero2W
//    Project:          ArtNet
//    FileName:         OutputDMXPacket.cs
//    Author:           Redforce04#4091
//    Revision Date:    10/14/2024 9:18
//    Created Date:     10/14/2024 9:18
// -----------------------------------------

namespace ArtNet.Packets;

using System.Buffers.Binary;
using System.ComponentModel;
using Enums;
using Structs;

public class OutputDMXPacket : ArtNetPacket
{
    public OutputDMXPacket(BinaryReader reader, int length) : base(reader, length)
    {
        this.ProtocolVersion = reader.ReadUInt16();
        this.Sequence = reader.ReadByte();
        this.PhysicalPort = reader.ReadByte();
        // todo = may be backwards?
        byte universe = reader.ReadByte();
        byte subnet = reader.ReadByte();
        this.Universe = new ArtNetUniverse(subnet, universe);
        this.Length = BinaryPrimitives.ReverseEndianness(reader.ReadUInt16());
        this.Data = reader.ReadBytes(this.Length);
    }

    public override OpCode OpCode => OpCode.OpOutputDmx;
    /// <summary>
    /// The sequence number is used to ensure that ArtDmx packets are used in the correct order.
    /// When Art-Net is carried over a medium such at the Internet, it is possible that ArtDmx packets
    /// will reach the receiver out of order. This field is incremented in the range 0x01 to
    /// 0xff to allow the receiving node to re-sequence packets. The Sequence field is set to 0x00 to disable this feature.
    /// </summary>
    public byte Sequence { get; }
    /// <summary>
    /// The physical input port from which DMX512 data was input. This field is used by the
    /// receiving device to discriminate between packets with identical Port-Address that have
    /// been generated by different input ports and so need to be merged.
    /// </summary>
    public byte PhysicalPort { get; }
    
    /// <summary>
    /// The universe to which this packet is destined.
    /// </summary>
    public ArtNetUniverse Universe { get; }

    /// <summary>
    /// The length of the DMX512 data array. This value should be an even number in the range 2 – 512.
    /// It represents the number of DMX512 channels encoded in packet. NB: Products which convert
    /// Art-Net to DMX512 may opt to always send 512 channels.
    /// </summary>
    public ushort Length { get; }

    /// <summary>
    /// A variable length array of DMX512 lighting data.
    /// </summary>
    public byte[] Data { get; }
    
}